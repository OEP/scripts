#!/usr/bin/env python3
'''
Crawl file systems and count files in directories.

This will crawl the given file systems and count the number of file links in
each directory. It can itemize each directory found or summarize each of the
given paths. It can sort the results as well. It counts file links, but is
meant to give you a rough idea of the number of inodes used.

This script can actually be implemented completely using the coreutils, but is
meant for the case where you are truly out of inodes on the root file system.
In this case you can not use `sort` since it needs temporary files.
'''

import os
import argparse


def main():
    parser = _get_parser()
    args = parser.parse_args()
    items_to_sort = []

    for path in args.paths:
        st = os.stat(path)
        device = st.st_dev
        count = 0

        for dirpath, dirnames, filenames in os.walk(path, topdown=True):
            # Do not cross the file system boundary if requested.
            if args.no_cross_device:
                st = os.stat(dirpath)
                if st.st_dev != device:
                    dirnames[:] = []
                    continue

            # Tally up this directory and the files it contains.
            this_count = 1 + len(filenames)
            count += this_count

            # Print each item if not asked to summarize
            if not args.summarize and not args.sort:
                print('{} {}'.format(this_count, dirpath))
            elif not args.summarize and args.sort:
                items_to_sort.append((this_count, dirpath))

        # Print each argument with total inodes counted if asked to summarize
        if args.summarize and not args.sort:
            print('{} {}'.format(count, path))
        elif args.summarize and args.sort:
            items_to_sort.append((count, path))

    # Output all the items in sorted order if requested.
    if args.sort:
        for count, path in sorted(items_to_sort):
            print('{} {}'.format(count, path))


def _get_parser():
    parser = argparse.ArgumentParser(description='Find inode hogs')
    parser.add_argument('-x', '--no-cross-device', action='store_true',
                        help='Do not cross file system boundaries')
    parser.add_argument('-s', '--summarize', action='store_true',
                        help='Summarize results')
    parser.add_argument('-S', '--sort', action='store_true',
                        help='Sort results')
    parser.add_argument('paths', nargs='+',
                        help='Paths to crawl')
    return parser

if __name__ == '__main__':
    main()
