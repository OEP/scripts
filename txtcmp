#!/usr/bin/env python

import sys
from collections import defaultdict

def lcs_length(str1, str2):
  if not str1 or not str2:
    return 0
  table = defaultdict(int)
  for i, c1 in enumerate(str1):
    for j, c2 in enumerate(str2):
      ij = (i, j)
      if c1 == c2:
        table[ij] = 1 + table[(i - 1, j - 1)]
      else:
        table[ij] = max(table[(i - 1, j)], table[(i, j - 1)])
  return table[(len(str1) - 1, len(str2) - 1)]

_files = {}
def filter_lines(filename):
  if filename in _files:
    return _files[filename]
  lines = _files[filename] = []
  with open(filename) as fp:
    lines[:] = [' '.join(line.split()) for line in fp]
    lines[:] = [hash(line) for line in lines if line]
  return lines

def score(a, b):
  maxLines = max(len(a), len(b))
  lcs = lcs_length(a,b)
  return float(lcs) / maxLines

def main():
  if len(sys.argv) < 3:
    print "Usage: %s <file1> <file2>..." % sys.argv[0]
    sys.exit(1)
  
  files = sys.argv[1:]
  for i in range(len(files)):
    a = filter_lines(files[i])
    for j in range(i + 1, len(files)):
      b = filter_lines(files[j])
      print "%f %s %s" % (score(a, b), files[i], files[j])

if __name__ == "__main__":
  main()
