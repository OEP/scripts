#!/usr/bin/env python

import sys
import re
import functools

g_Files = dict()

def LCSLength(str1, str2):
  if len(str1)==0 or len(str2)==0:
    return 0

  def lookup(i, j, t):
    if i < 0 or j < 0: return 0
    return t[i][j]

  table = [ [0]*len(str2) ] * len(str1)

  for i in range(len(str1)):
    for j in range(len(str2)):
      if str1[i] == str2[j]:
        table[i][j] = lookup(i-1,j-1,table) + 1
      else:
        table[i][j] = max(lookup(i-1, j, table), lookup(i, j-1, table))
  return table[-1][-1]

def filter_lines(filename):
  global g_Files
  if filename in g_Files: return g_Files[filename]

  fp = open(filename)
  linebuffer = g_Files.setdefault(filename, list())
  for line in fp:
    line = line.strip()
    line = re.sub("[ \t]+", " ", line)
    if line != "":
      linebuffer.append(line)
  fp.close()
  return linebuffer

def score(a, b):
  maxLines = max( len(a), len(b) )
  lcs = LCSLength(a,b)
  return float(lcs) / maxLines

def main():
  if len(sys.argv) < 3:
    print "Usage: %s <file1> <file2>..." % sys.argv[0]
    sys.exit(1)
  
  files = sys.argv[1:]

  for i in range( len(files) ):
    a = filter_lines(files[i])
    for j in range(i+1, len(files) ):
      b = filter_lines(files[j])
      print "%f %s %s" % (score(a,b), files[i], files[j])

if __name__ == "__main__":
  main()
