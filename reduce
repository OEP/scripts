#!/usr/bin/env python
from argparse import ArgumentParser
import operator
import sys

REDUCER_CHOICES = (
  'cat',
  'sum',
  'product',
)

def number(x=None):
  if x is None:
    return 0
  try:
    return int(x)
  except ValueError:
    return float(x)

def main():
  parser = _get_parser()
  args = parser.parse_args()
  reducer, cast = _get_reducer(args.reducer)
 
  if not args.files:
    print reduce(reducer, _rtrim(sys.stdin, cast), cast())
    sys.exit(0)

  reduction = cast()
  for p in args.files:
    if p == '-':
      fp = sys.stdin
    else:
      fp = open(p)
    reduction = reduce(reducer, _rtrim(fp, cast), reduction)
    fp.close()
  print reduction 

def _rtrim(fp, cast):
  for line in fp:
    yield cast(line[:-1])

def _get_reducer(reducer):
  if reducer == 'sum':
    return operator.add, number
  elif reducer == 'product':
    return operator.mul, number
  elif reducer == 'cat':
    return operator.add, str
  assert False, "invalid reducer: %s" % reducer

def _get_parser():
  parser = ArgumentParser()
  parser.add_argument('reducer', choices=REDUCER_CHOICES,
                      help='reduction operation')
  parser.add_argument('files', nargs='*',
                      help='paths to reduce')
  return parser

if __name__ == '__main__':
  main()
