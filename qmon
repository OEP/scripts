#!/bin/bash
name="`basename $0`"
states=R
batch=
query=''
refresh=30

function printUsage() {
  echo "Usage: $name [-hb] [-r interval] [[--] query]"
}

function printHelp() {
  echo "Monitor PBS jobs semi-interactively."
  echo
  echo "By default, prints a list of running jobs at the top and a"
  echo "total count for the jobs matching the query."
  echo
  echo "Options:"
  echo "  -r  Set refresh interval (seconds)"
  echo "  -s  States of jobs to show in task list"
  echo "  -b  Batch mode (no refresh)"
  echo "  -h  Show this help message"
  echo
  echo "Refresh interval is ignored in batch mode."
  echo
  echo "The query may be any valid arguments for qselect."
  echo
  echo "If no query is given, monitor current user's jobs."
  echo
  echo "Note that if you use a custom query involving flags, you must escape"
  echo "them using --."
  echo
  echo "Examples:"
  echo "  Change refresh rate to 45 seconds:"
  echo "  $> $name -r 45"
  echo "  Monitor two users' jobs:"
  echo "  $> $name -- -u user1,user2"
}

while getopts 'hbr:s:' opt; do
  case $opt in
    r) refresh="$OPTARG" ;;
    s) states="$OPTARG" ;;
    b) batch=1 ;;
    -) break ;;
    h) printUsage
       echo
       printHelp
       exit 0 ;;
    *) printUsage >> /dev/stderr; exit 2 ;;
  esac
done
shift $((OPTIND-1))
query="$@"

if [ -z "$query" ]; then
  query="-u `whoami`";
fi

while true; do
  if [ ! $batch ]; then
    clear
  fi
  qselect $query -s $states | xargs --no-run-if-empty qstat -r
  echo
  echo -n "total: "
  qselect $query | wc -l

  if [ $batch ]; then
    break
  else
    sleep $refresh
  fi
done
exit 0
