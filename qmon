#!/bin/bash
name="`basename $0`"
states=R
batch=
query=''
refresh=30

function printUsage() {
  echo "Usage: $name [-hb] [-r interval] [[--] query]"
}

function printHelp() {
  cat <<EOF
Monitor PBS jobs semi-interactively.

By default, prints a list of running jobs at the top and a total count for the
jobs matching the query.

Options:
  -r  Set refresh interval (seconds)
  -s  States of jobs to show in task list
  -b  Batch mode (no refresh)
  -h  Show this help message

Refresh interval is ignored in batch mode.  The query may be any valid
arguments for qselect.  If no query is given, monitor current user's jobs.
Note that if you use a custom query involving flags, you must escape them using
two dashes (--).

Examples:
  Change refresh rate to 45 seconds:
  $> $name -r 45
  Monitor two users' jobs:
  $> $name -- -u user1,user2
EOF
}

while getopts 'hbr:s:' opt; do
  case $opt in
    r) refresh="$OPTARG" ;;
    s) states="$OPTARG" ;;
    b) batch=1 ;;
    -) break ;;
    h) printUsage
       echo
       printHelp
       exit 0 ;;
    *) printUsage >> /dev/stderr; exit 2 ;;
  esac
done
shift $((OPTIND-1))
query="$@"

if [ -z "$query" ]; then
  query="-u `whoami`";
fi

while true; do
  if [ ! $batch ]; then
    clear
  fi
  qselect $query -s $states | xargs --no-run-if-empty qstat -r
  echo
  echo -n "total: "
  qselect $query | wc -l

  if [ $batch ]; then
    break
  else
    sleep $refresh
  fi
done
exit 0
